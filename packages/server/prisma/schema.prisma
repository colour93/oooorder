// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  orders Order[]

  @@map("users")
}

// 商品模型
model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  images      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联
  skus ProductSKU[]

  @@map("products")
}

// 商品SKU模型
model ProductSKU {
  id              String   @id @default(cuid())
  productId       String
  specification   String
  stock           Int      @default(0)
  maxOrderQuantity Int
  price           Decimal
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // 关联
  product          Product           @relation(fields: [productId], references: [id])
  orderItems       OrderItem[]
  productionBatches ProductionBatch[]

  @@map("product_skus")
}

// 设备模型
model Equipment {
  id        String   @id @default(cuid())
  type      String
  code      String   @unique
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  productionBatches ProductionBatch[]

  @@map("equipment")
}

// 员工模型
model Staff {
  id        String   @id @default(cuid())
  role      String
  name      String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  productionBatches ProductionBatch[]

  @@map("staff")
}

// 生产批次模型
model ProductionBatch {
  id            String   @id @default(cuid())
  batchNumber   String   @unique
  quantity      Int
  skuId         String
  equipmentId   String
  staffId       String
  status        String
  producedAt    DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // 关联
  sku        ProductSKU  @relation(fields: [skuId], references: [id])
  equipment  Equipment   @relation(fields: [equipmentId], references: [id])
  staff      Staff      @relation(fields: [staffId], references: [id])
  orderItems OrderItem[]

  @@map("production_batches")
}

// 采集批次模型
model CollectionBatch {
  id        String   @id @default(cuid())
  name      String
  deadline  DateTime
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  invitationCodes InvitationCode[]

  @@map("collection_batches")
}

// 邀请码模型
model InvitationCode {
  id               String   @id @default(cuid())
  code             String   @unique
  maxOrders        Int
  maxItemsPerOrder Int
  allowedSkus      String[]
  batchId          String
  status           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // 关联
  collectionBatch CollectionBatch @relation(fields: [batchId], references: [id])
  orders          Order[]

  @@map("invitation_codes")
}

// 订单模型
model Order {
  id               String   @id @default(cuid())
  userId           String
  invitationCodeId String
  status           String
  shippingAddress  String
  contactInfo      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // 关联
  user           User           @relation(fields: [userId], references: [id])
  invitationCode InvitationCode @relation(fields: [invitationCodeId], references: [id])
  items          OrderItem[]

  @@map("orders")
}

// 订单项模型
model OrderItem {
  id                String   @id @default(cuid())
  orderId           String
  skuId             String
  quantity          Int
  productionBatchId String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // 关联
  order           Order            @relation(fields: [orderId], references: [id])
  sku             ProductSKU       @relation(fields: [skuId], references: [id])
  productionBatch ProductionBatch? @relation(fields: [productionBatchId], references: [id])

  @@map("order_items")
}